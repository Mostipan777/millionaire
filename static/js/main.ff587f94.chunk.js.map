{"version":3,"sources":["components/Unknown/OutlinedButton/ButtonBorder.tsx","components/Unknown/OutlinedButton/index.tsx","components/AnswersList/index.tsx","components/QuestionView/index.tsx","components/Unknown/ScoreItem/ScoreBorder.tsx","components/Unknown/ScoreItem/index.tsx","components/ScoreList/index.tsx","images/Hand.tsx","components/Unknown/Button/index.tsx","components/StartGame/index.tsx","components/EndGame/index.tsx","common/formatedScore.ts","images/BurgerIcon.tsx","images/CrossIcon.tsx","App.tsx","index.tsx"],"names":["Border","className","viewBox","fill","xmlns","d","stroke","OutlinedButton","option","text","isRight","result","setView","questionNumber","useState","setClassName","onClick","setTimeout","AnswersList","answers","map","answer","index","is_right","shuffledNumbersArray","sort","Math","random","QuestionView","setQuestionNumber","setIndex","question","setQuestion","console","log","getSelectedQuestion","config","easy_questions","medium_questions","hard_questions","ScoreBorder","ScoreItem","value","id","newValue","toString","replace","formatedValue","ScoreList","prizes","prize","reverse","Hand","props","Button","title","StartGame","BurgerIcon","width","height","CrossIcon","App","view","right","customBurgerIcon","customCrossIcon","EndGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff587f94.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface BorderProps extends React.SVGProps<SVGSVGElement> {\r\n  className: string;\r\n}\r\n\r\nconst Border: React.FC<BorderProps> = ({ className }) => {\r\n  return (\r\n    <svg className={className}\r\n      viewBox=\"0 0 405 72\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path className={className}\r\n        d=\"M38.717 5.283A11.5 11.5 0 0148.052.5h308.896a11.5 11.5 0 019.335 4.783L388.384 36l-22.101 30.717a11.5 11.5 0 01-9.335 4.783H48.052a11.5 11.5 0 01-9.335-4.783L16.616 36 38.717 5.283z M388 36h17M0 36h17\"\r\n        fill=\"#fff\"\r\n        stroke=\"#D0D0D8\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Border;\r\n","import React, { useState } from 'react';\r\nimport Border from './ButtonBorder';\r\n\r\ninterface OutlinedButtonProps {\r\n  option: string;\r\n  text: string;\r\n  isRight: boolean;\r\n  result: any;\r\n  setView: () => void;\r\n  questionNumber: number;\r\n}\r\n\r\nconst OutlinedButton: React.FC<OutlinedButtonProps> = ({\r\n  option,\r\n  text,\r\n  isRight,\r\n  result,\r\n  setView,\r\n  questionNumber,\r\n}) => {\r\n  const [className, setClassName] = useState('answer-svg');\r\n  const onClickHandler = () => {\r\n    if (isRight) {\r\n      setClassName('answer-svg-true');\r\n    } else {\r\n      setClassName('answer-svg-false');\r\n    }\r\n    setTimeout(() => {\r\n      result(isRight);\r\n      setClassName('answer-svg');\r\n      if (!isRight || questionNumber >= 12) {\r\n        setView();\r\n      }\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"outlined-button\" onClick={onClickHandler}>\r\n      <div className=\"button-text\">\r\n        <span className=\"option\">{option}</span>\r\n        <span>{text}</span>\r\n      </div>\r\n      <Border className={className} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OutlinedButton;\r\n","import OutlinedButton from '../Unknown/OutlinedButton';\r\nimport './styles.css';\r\n\r\ninterface AnswersListProps {\r\n  result: any;\r\n  answers: any[] | null | 0;\r\n  setView: () => void;\r\n  questionNumber: number;\r\n}\r\n\r\nconst AnswersList: React.FC<AnswersListProps> = ({\r\n  result,\r\n  answers,\r\n  setView,\r\n  questionNumber,\r\n}) => {\r\n  const getAnswers = () => {\r\n    return (\r\n      answers &&\r\n      answers.map((answer, index) => (\r\n        <OutlinedButton\r\n          key={index}\r\n          option={answer.option}\r\n          text={answer.text}\r\n          isRight={answer.is_right}\r\n          result={result}\r\n          setView={setView}\r\n          questionNumber={questionNumber}\r\n        />\r\n      ))\r\n    );\r\n  };\r\n\r\n  return <div className=\"answers-list\">{getAnswers()}</div>;\r\n};\r\n\r\nexport default AnswersList;\r\n","import { useState, SetStateAction, Dispatch } from 'react';\r\nimport config from '../../config.json';\r\nimport AnswersList from '../AnswersList';\r\n\r\ninterface QuestionViewProps {\r\n  questionNumber: number;\r\n  setQuestionNumber: Dispatch<SetStateAction<number>>;\r\n  setView: () => void;\r\n}\r\n\r\nconst shuffleArray = (array: number[]) => {\r\n  return array.sort(() => Math.random() - 0.5);\r\n};\r\n\r\nconst shuffledNumbersArray = shuffleArray([0, 1, 2, 3]);\r\nconst QuestionView: React.FC<QuestionViewProps> = ({\r\n  questionNumber,\r\n  setQuestionNumber,\r\n  setView,\r\n}) => {\r\n  const [index, setIndex] = useState(1);\r\n  const [question, setQuestion] = useState(shuffledNumbersArray[0]);\r\n  console.log(shuffledNumbersArray);\r\n  const getSelectedQuestion = () => {\r\n    if (questionNumber <= 4) return config.easy_questions[question];\r\n    if (questionNumber <= 8) return config.medium_questions[question];\r\n    return config.hard_questions[question];\r\n  };\r\n\r\n  const result = (isRight: boolean) => {\r\n    if (index === 3 || !isRight) {\r\n      setIndex(0);\r\n    } else {\r\n      setIndex(index + 1);\r\n    }\r\n    if (isRight) {\r\n      setQuestionNumber(questionNumber + 1);\r\n      setQuestion(shuffledNumbersArray[index]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"question\">{getSelectedQuestion().question}</div>\r\n      <AnswersList\r\n        result={result}\r\n        answers={getSelectedQuestion().answers}\r\n        setView={setView}\r\n        questionNumber={questionNumber}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionView;\r\n","import React from 'react';\r\n\r\ninterface ScoreBorderProps extends React.SVGProps<SVGSVGElement> {\r\n  className: string;\r\n}\r\n\r\nconst ScoreBorder: React.FC<ScoreBorderProps> = ({ className }) => {\r\n  return (\r\n    <svg\r\n      className={className}\r\n      viewBox=\"0 0 376 40\"\r\n      fill=\"white\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        className={className}\r\n        d=\"M81.453 4.638A11.5 11.5 0 0190.287.5h195.426c3.413 0 6.649 1.516 8.834 4.138L307.349 20l-12.802 15.362a11.499 11.499 0 01-8.834 4.138H90.287a11.5 11.5 0 01-8.834-4.138L68.65 20 81.453 4.638zM376 20h-69M69 20H0\"\r\n        stroke=\"#D0D0D8\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default ScoreBorder;\r\n","import React from 'react';\r\nimport ScoreBorder from './ScoreBorder';\r\nimport './styles.css';\r\n\r\ninterface ScoreItemProps {\r\n  id: number;\r\n  value: number;\r\n  questionNumber: number;\r\n}\r\n\r\nconst ScoreItem: React.FC<ScoreItemProps> = ({ value, id, questionNumber }) => {\r\n  const formatedValue = () => {\r\n    const newValue = value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    return `$${newValue}`;\r\n  };\r\n\r\n  const getScoreValueStyle = () => {\r\n    if (questionNumber > id) return 'score-value-past';\r\n    if (questionNumber < id) return 'score-value-next';\r\n    return 'score-value-active';\r\n  };\r\n\r\n  const isActive = () => {\r\n    if (questionNumber === id) return 'score-border-active';\r\n    return 'score-border';\r\n  };\r\n\r\n  return (\r\n    <div className=\"score-item\">\r\n      <div className={getScoreValueStyle()}>\r\n        <span>{formatedValue()}</span>\r\n      </div>\r\n      <ScoreBorder className={isActive()} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScoreItem;\r\n","import ScoreItem from '../Unknown/ScoreItem';\r\nimport config from '../../config.json';\r\nimport './styles.css';\r\n\r\ninterface ScoreListProps {\r\n  questionNumber: number;\r\n}\r\n\r\nconst ScoreList: React.FC<ScoreListProps> = ({ questionNumber }) => {\r\n  const getItems = () => {\r\n    const prizes = config.prizes.map((prize) => (\r\n      <ScoreItem\r\n        key={prize.id}\r\n        value={prize.value}\r\n        id={prize.id}\r\n        questionNumber={questionNumber}\r\n      />\r\n    ));\r\n    return prizes.reverse();\r\n  };\r\n\r\n  return <div className=\"score-list\">{getItems()}</div>;\r\n};\r\n\r\nexport default ScoreList;\r\n","import React from 'react';\r\n\r\nconst Hand = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 624 367\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M433.483 211.523a669.66 669.66 0 0015.856-72 278.456 278.456 0 0113.581-26.844c6.166-10.664 13.434-20.52 20.187-30.816 6.02-9.193 11.452-19.342 12.113-30.447.514-8.679-1.395-18.019-7.194-24.785-6.387-7.502-16.224-10.444-25.84-9.56-10.424.882-19.894 6.397-27.969 12.796-8.736 6.987-16.884 14.93-24.592 22.946-14.902 15.518-28.116 32.654-39.494 50.893-8.369-3.236-16.444-7.134-24.519-10.958-11.745-5.59-23.637-10.517-36.264-13.827-22.536-5.883-47.936-8.163-70.032.515-19.967 7.87-36.778 25.815-37.071 48.172-.147 8.826 2.422 16.548 6.68 23.314-9.103 5.001-16.811 12.135-21.582 21.549-4.845 9.561-5.8 21.254-1.836 31.256 1.469 3.678 3.524 6.987 6.02 9.929-7.414 6.766-14.095 15.371-17.178 25.005-2.936 9.12-1.248 18.313 3.597 26.476 1.395 2.28 3.01 4.413 4.772 6.472-8.149 7.134-10.791 18.828-8.369 29.271 2.79 12.282 11.746 21.843 21.362 29.418 7.415 5.81 15.343 11.032 23.565 15.665a167.516 167.516 0 0012.773 7.208c4.624 2.28 9.469 4.413 14.388 5.883 3.377 1.03 6.827 1.913 10.277 2.354 2.349.294 4.698.441 7.047.368 1.175 0 2.349-.074 3.451-.221 3.23-.294 6.46-1.177 9.616-2.206a35.45 35.45 0 006.387-2.869c1.615-.882 3.23-1.838 4.698-2.868 9.249 2.206 18.646 3.457 28.189 3.31 20.334-.368 39.421-8.605 54.837-21.77 16.957-14.415 28.923-33.61 38.025-53.761 10.204-22.358 17.839-46.113 24.519-69.868z\"\r\n        fill=\"#EF9E81\"\r\n      />\r\n      <path\r\n        d=\"M183.877 273.978c14.053 9.059 28.621 17.382 43.557 24.822 7.357 3.682 14.862 7.218 22.514 10.312 7.578 3.093 15.377 5.745 23.471 7.365 7.505 1.473 15.671 2.21 23.25.737 4.709-.884 9.785-2.063 13.832-4.714 2.428-1.547 4.488-3.536 6.401-5.672 1.692-1.915 3.458-3.977 4.709-6.187 1.987-3.609 3.09-7.66 3.532-11.711 1.25-10.239-2.06-20.845-10.301-27.327a26.864 26.864 0 00-3.826-2.578c-1.03-.589-1.913.958-.956 1.621 4.782 2.799 8.608 6.776 10.962 11.858 1.987 4.272 2.723 9.134 2.502 13.848-.221 4.051-1.03 8.102-2.722 11.785-.736 1.62-1.693 3.093-2.796 4.493-1.987 2.578-4.194 5.008-6.696 7.071-3.531 2.872-7.872 4.125-12.213 5.156-7.211 1.767-14.789 1.546-22.073.442-15.745-2.431-30.534-9.207-44.734-16.131a441.724 441.724 0 01-42.454-23.57c-1.692-1.031-3.31-2.136-5.003-3.167-1.03-.663-1.986.957-.956 1.547z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M197.562 216.378a1855.93 1855.93 0 0049.517 22.465c15.892 6.998 31.932 13.995 48.707 18.635 8.093 2.284 16.775 4.42 25.236 2.947 6.254-1.105 11.993-4.272 16.408-8.765 4.488-4.567 7.725-10.46 9.05-16.794.809-3.683.515-7.513-.147-11.196-1.987-10.68-8.462-20.329-17.879-25.706-1.398-.81-2.87-1.473-4.415-2.136-1.104-.442-1.545 1.326-.515 1.768 10.227 4.272 17.585 13.111 20.381 23.717.956 3.683 1.471 7.587 1.03 11.343-.589 5.451-3.311 10.975-6.696 15.247-3.899 4.788-9.123 8.397-15.083 10.091-7.872 2.136-16.113.516-23.838-1.547-16.261-4.198-31.785-10.754-47.163-17.456a2315.16 2315.16 0 01-47.824-21.508c-1.987-.958-3.973-1.841-5.96-2.799-.956-.368-1.839 1.252-.809 1.694z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M214.852 153.991c18.615 7.734 36.641 16.794 54.962 24.97 9.049 4.051 18.246 7.881 27.591 11.269 9.491 3.462 19.35 6.85 29.43 7.955 8.755 1.031 18.1-.147 25.531-5.303 3.384-2.357 6.254-5.451 8.093-9.133 1.913-3.757 2.796-8.029 2.722-12.227 0-8.692-3.899-16.72-9.638-23.128-6.254-6.998-14.494-11.859-23.029-15.616-7.284-3.24-14.789-5.892-22.22-8.765-7.284-2.799-14.421-5.745-21.484-8.986-2.281-1.031-4.562-2.062-6.843-3.167-1.03-.516-1.987 1.105-.956 1.62 7.651 3.536 15.377 6.924 23.176 10.091 6.548 2.578 13.097 5.083 19.645 7.587 8.755 3.388 17.511 7.292 24.868 13.258 6.475 5.303 11.993 12.374 13.906 20.624 1.913 8.102.221 17.235-5.739 23.275-5.959 6.04-14.715 8.397-23.029 8.25-10.006-.148-19.865-3.388-29.21-6.556-9.344-3.167-18.467-6.85-27.443-10.754-17.953-7.807-35.464-16.646-53.49-24.38-2.134-.957-4.341-1.841-6.475-2.725-.956-.442-1.471 1.399-.368 1.841zM289.458 349.991c2.723-5.598 3.826-12.006 3.091-18.194-.368-3.019-1.104-6.039-2.281-8.912-1.03-2.504-2.355-5.819-5.151-6.703-1.103-.368-1.618 1.4-.515 1.768 1.251.368 1.987 1.621 2.576 2.725a36.257 36.257 0 011.765 3.83c.957 2.652 1.619 5.377 1.84 8.176a31.357 31.357 0 01-2.943 16.352c-.515 1.105 1.103 2.062 1.618.958z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M319.477 184.043c.368-11.343 5.298-22.318 13.465-30.125.883-.811-.442-2.136-1.325-1.326-8.535 8.176-13.611 19.592-14.053 31.377.074 1.253 1.913 1.253 1.913.074z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M330.072 156.422c4.121 1.179 8.241 2.578 11.993 4.714 3.017 1.694 5.813 4.199 6.401 7.808.589 3.535-1.03 7.144-3.605 9.501-2.722 2.578-6.548 3.757-10.227 4.051-5.077.369-10.08-1.031-14.936-2.43-1.104-.295-1.619 1.473-.515 1.768 8.535 2.504 18.762 4.64 26.34-1.547 2.943-2.431 4.93-6.187 4.856-10.091 0-4.051-2.354-7.292-5.518-9.502-1.913-1.326-4.047-2.357-6.18-3.241a76.446 76.446 0 00-8.167-2.872c-1.104-.295-1.545 1.473-.442 1.841zM297.037 242.526c.368-12.153 5.665-23.864 14.421-32.261.883-.81-.442-2.136-1.325-1.326-9.123 8.691-14.568 20.918-15.009 33.587 0 1.179 1.839 1.179 1.913 0z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M308.441 212.916c4.341 1.252 8.755 2.799 12.729 5.009 3.31 1.841 6.401 4.566 6.989 8.544.515 3.756-1.177 7.587-3.899 10.091-3.017 2.799-7.137 4.051-11.11 4.346-5.445.368-10.742-1.105-15.893-2.578-1.103-.295-1.618 1.473-.515 1.767 8.977 2.652 19.866 4.935 27.886-1.473 3.237-2.578 5.371-6.629 5.371-10.827 0-4.346-2.575-7.808-5.96-10.238-2.06-1.474-4.341-2.505-6.622-3.462-2.796-1.179-5.665-2.21-8.535-3.02-1.103-.295-1.618 1.473-.441 1.841zM277.171 301.82c.368-12.154 5.666-23.865 14.421-32.262.883-.81-.441-2.136-1.324-1.326-9.124 8.692-14.568 20.919-15.01 33.588 0 1.178 1.84 1.178 1.913 0z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M288.576 272.136c4.341 1.252 8.755 2.799 12.728 5.009 3.311 1.841 6.401 4.566 6.99 8.544.515 3.756-1.177 7.586-3.9 10.091-3.016 2.799-7.136 4.051-11.11 4.345-5.444.369-10.742-1.104-15.892-2.578-1.104-.294-1.619 1.474-.515 1.768 8.976 2.652 19.865 4.935 27.885-1.473 3.238-2.578 5.371-6.629 5.371-10.827 0-4.346-2.575-7.808-5.959-10.239-2.06-1.473-4.341-2.504-6.622-3.462-2.796-1.178-5.666-2.209-8.535-3.019-1.104-.295-1.619 1.546-.441 1.841zM253.553 346.529c.294-9.134 4.268-17.972 10.889-24.307.883-.81-.441-2.136-1.324-1.326-6.99 6.629-11.11 15.984-11.404 25.559 0 1.252 1.839 1.252 1.839.074z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M261.941 324.284c3.237.958 6.548 2.063 9.491 3.757 2.428 1.399 4.783 3.388 5.224 6.334.442 2.799-.883 5.746-2.943 7.587-2.281 2.062-5.371 2.946-8.314 3.167-4.047.221-7.946-.81-11.846-1.989-1.103-.294-1.618 1.474-.515 1.768 6.916 1.989 15.23 3.757 21.337-1.178 2.502-1.989 4.12-5.083 4.12-8.323 0-3.315-1.912-6.04-4.561-7.955-3.385-2.431-7.652-3.83-11.625-4.935-1.03-.369-1.472 1.399-.368 1.767z\"\r\n        fill=\"#C4674E\"\r\n      />\r\n      <path\r\n        d=\"M485.832 267.864l-6.106-20.992-5.666 20.992-20.307 6.702 20.307 6.85 5.666 22.76 6.401-22.612 19.571-6.998-19.866-6.702zM147.898 106.336l-5.96-20.55-5.591 20.476-19.866 6.629 19.866 6.629 5.591 22.318 6.254-22.17 19.204-6.777-19.498-6.555zM525.416 213.874l-3.679-12.669-3.458 12.669-12.213 3.977 12.213 4.125 3.458 13.774 3.826-13.627 11.846-4.272-11.993-3.977zM104.783 174.467l-3.606-12.374-3.384 12.374-11.993 3.978 11.993 3.977 3.384 13.479 3.753-13.405 11.551-4.051-11.698-3.978zM337.136 15.444l-2.944-10.238-2.795 10.238-9.86 3.24 9.86 3.315 2.795 11.122 3.091-11.048 9.565-3.388-9.712-3.241zM144.881 331.503l-2.943-10.239-2.796 10.239-9.859 3.314 9.859 3.315 2.796 11.048 3.091-10.975 9.564-3.388-9.712-3.314z\"\r\n        fill=\"#FFD62A\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Hand;\r\n","interface ButtonProps {\r\n  title: string;\r\n  setView: () => void;\r\n  setQuestionNumber: () => void;\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({\r\n  title,\r\n  setView,\r\n  setQuestionNumber,\r\n}) => {\r\n  const onClickHandler = () => {\r\n    setView();\r\n    setQuestionNumber();\r\n  };\r\n  return (\r\n    <button className=\"button\" onClick={() => onClickHandler()}>\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import Hand from '../../images/Hand';\r\nimport Button from '../Unknown/Button';\r\n\r\ninterface StartGameProps {\r\n  setView: () => void;\r\n  setQuestionNumber: () => void;\r\n}\r\n\r\nconst StartGame: React.FC<StartGameProps> = ({\r\n  setView,\r\n  setQuestionNumber,\r\n}) => {\r\n  return (\r\n    <div className=\"start-game\">\r\n      <div className=\"hand\">\r\n        <Hand />\r\n      </div>\r\n      <div className=\"start-title\">\r\n        <div>Who wants to be a millionaire?</div>\r\n        <div>\r\n          <Button\r\n            title=\"Start\"\r\n            setView={setView}\r\n            setQuestionNumber={setQuestionNumber}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartGame;\r\n","import Hand from '../../images/Hand';\r\nimport Button from '../Unknown/Button';\r\nimport config from '../../config.json';\r\nimport { formatedValue } from '../../common/formatedScore';\r\n\r\ninterface StartGameProps {\r\n  setView: () => void;\r\n  questionNumber: number;\r\n  setQuestionNumber: () => void;\r\n}\r\n\r\nconst StartGame: React.FC<StartGameProps> = ({\r\n  setView,\r\n  questionNumber,\r\n  setQuestionNumber,\r\n}) => {\r\n  const prize = () => {\r\n    if (questionNumber > 1)\r\n      return `${formatedValue(config.prizes[questionNumber - 2].value)} earned`;\r\n    return '$0 earned'\r\n  };\r\n\r\n  return (\r\n    <div className=\"end-game\">\r\n      <div className=\"hand\">\r\n        <Hand />\r\n      </div>\r\n      <div className=\"start-title\">\r\n        <div>\r\n          <div className=\"end-title\">Total score:</div>\r\n          <div>{prize()}</div>\r\n        </div>\r\n        <div>\r\n          <Button\r\n            title=\"Try again\"\r\n            setView={setView}\r\n            setQuestionNumber={setQuestionNumber}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartGame;\r\n","export const formatedValue = (value: number) => {\r\n  const newValue = value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n  return `$${newValue}`;\r\n};","import React from 'react';\r\n\r\nconst BurgerIcon = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      width={16}\r\n      height={14}\r\n      viewBox=\"0 0 16 14\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M0 1a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1zM0 7a1 1 0 011-1h14a1 1 0 110 2H1a1 1 0 01-1-1zM1 12a1 1 0 100 2h14a1 1 0 100-2H1z\"\r\n        fill=\"#1C1C21\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default BurgerIcon;\r\n","import React from 'react';\r\n\r\nconst CrossIcon = (props: React.SVGProps<SVGSVGElement>) => {\r\n  return (\r\n    <svg\r\n      width={14}\r\n      height={14}\r\n      viewBox=\"0 0 14 14\"\r\n      fill=\"none\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        d=\"M13.364 2.05A1 1 0 0011.95.636L7 5.586 2.05.636A1 1 0 10.636 2.05L5.586 7l-4.95 4.95a1 1 0 001.414 1.414L7 8.414l4.95 4.95a1 1 0 001.414-1.414L8.414 7l4.95-4.95z\"\r\n        fill=\"#1C1C21\"\r\n      />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default CrossIcon;\r\n","import { useState } from 'react';\nimport QuestionView from './components/QuestionView';\nimport ScoreList from './components/ScoreList';\nimport StartGame from './components/StartGame';\nimport EndGame from './components/EndGame';\nimport { slide as Menu } from 'react-burger-menu';\nimport BurgerIcon from './images/BurgerIcon';\nimport CrossIcon from './images/CrossIcon';\n\nfunction App() {\n  const [view, setView] = useState('start');\n  const [questionNumber, setQuestionNumber] = useState(1);\n\n  const getView = () => {\n    if (view === 'start') {\n      return (\n        <StartGame\n          setView={() => setView('game')}\n          setQuestionNumber={() => setQuestionNumber(1)}\n        />\n      );\n    }\n    if (view === 'game') {\n      return (\n        <>\n          <Menu\n            right\n            width=\"320px\"\n            customBurgerIcon={<BurgerIcon />}\n            customCrossIcon={<CrossIcon />}\n            className=\"burger-menu\"\n          >\n            <div className=\"score\">\n              <ScoreList questionNumber={questionNumber - 1} />\n            </div>\n          </Menu>\n          <QuestionView\n            questionNumber={questionNumber}\n            setQuestionNumber={setQuestionNumber}\n            setView={() => setView('end')}\n          />\n          <div className=\"score\">\n            <ScoreList questionNumber={questionNumber - 1} />\n          </div>\n        </>\n      );\n    }\n    if (view === 'end') {\n      return (\n        <EndGame\n          setView={() => setView('game')}\n          questionNumber={questionNumber}\n          setQuestionNumber={() => setQuestionNumber(1)}\n        />\n      );\n    }\n  };\n\n  return <div className=\"App\">{getView()}</div>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}